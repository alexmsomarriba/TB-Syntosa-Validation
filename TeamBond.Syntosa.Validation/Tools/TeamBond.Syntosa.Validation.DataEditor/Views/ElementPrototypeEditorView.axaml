<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="TeamBond.Syntosa.Validation.DataEditor.Views.ElementPrototypeEditorView">
  <ScrollViewer VerticalScrollBarVisibility="Visible">
    <DockPanel>
        <TextBlock DockPanel.Dock="Top"
                   IsVisible="{Binding !IsElementSelected}">
            Select the parent type.
        </TextBlock>
        <ListBox Items="{Binding AllElementNames}"
                 IsVisible="{Binding !IsElementSelected}"
                 SelectionMode="Single"
                 DockPanel.Dock="Top"
                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                 Height="100"
                 SelectedItem="{Binding SelectedElementToUpdateName}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border Background="White" CornerRadius="4" Padding="2">
                        <TextBlock Text="{Binding}"/>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button
            Command="{Binding GetElementToUpdate}"
            Content="Select element"
            IsVisible="{Binding !IsElementSelected}"
            Height="30"/>
        <TextBox DockPanel.Dock="Top"
                 Watermark="Element name"
                 IsVisible="{Binding IsElementSelected}"
                 Text="{Binding ElementName}"/>
      <TextBox DockPanel.Dock="Top"
               IsVisible="{Binding IsElementSelected}"
               Watermark="Element Alias"
               Text="{Binding ElementAlias}"/>
      <TextBox DockPanel.Dock="Top"
               IsVisible="{Binding IsElementSelected}"
               Watermark="Element description"
               Text="{Binding Description}"/>
      <CheckBox DockPanel.Dock="Top"
                IsVisible="{Binding IsElementSelected}"
                IsThreeState="False"
                IsChecked="{Binding HasParent}">
        Does the element have a parent
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsVisible="{Binding IsElementSelected}"
                IsThreeState="False"
                IsChecked="{Binding IsActive}">
        Is the type active
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsVisible="{Binding IsElementSelected}"
                IsThreeState="False"
                IsChecked="{Binding IsBuiltIn}">
        Is the type built in
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsVisible="{Binding IsElementSelected}"
                IsThreeState="False"
                IsChecked="{Binding IsAutoCollect}">
        Is the type auto collecting from somewhere
      </CheckBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding IsElementSelected}">
        Select domain.
      </TextBlock>
      <ListBox Items="{Binding AllDomainNames}"
               IsVisible="{Binding IsElementSelected}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedDomainName}">
          <ListBox.ItemTemplate>
              <DataTemplate>
                  <Border Background="White" CornerRadius="4" Padding="2">
                      <TextBlock Text="{Binding}"/>
                  </Border>
              </DataTemplate>
          </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding IsElementSelected}">
        Select the type.
      </TextBlock>
      <ListBox Items="{Binding AllTypeItemNames}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               IsVisible="{Binding IsElementSelected}"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedTypeItemName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding IsElementSelected}">
          Select the record type.
      </TextBlock>
      <ListBox Items="{Binding AllTypeItemNames}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               IsVisible="{Binding IsElementSelected}"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedTypeRecordName}">
          <ListBox.ItemTemplate>
              <DataTemplate>
                  <Border Background="White" CornerRadius="4" Padding="2">
                      <TextBlock Text="{Binding}"/>
                  </Border>
              </DataTemplate>
          </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top">
          Select module.
      </TextBlock>
      <ListBox Items="{Binding AllModuleNames}"
               SelectionMode="Single"
               IsVisible="{Binding IsElementSelected}"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedModuleName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top">
          Select module record type.
      </TextBlock>
      <ListBox Items="{Binding AllModuleNames}"
               IsVisible="{Binding IsElementSelected}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedModuleRecordName}">
          <ListBox.ItemTemplate>
              <DataTemplate>
                  <Border Background="White" CornerRadius="4" Padding="2">
                      <TextBlock Text="{Binding}"/>
                  </Border>
              </DataTemplate>
          </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding HasParent}">
        Select the parent type.
      </TextBlock>
      <ListBox Items="{Binding AllElementNames}"
               IsVisible="{Binding HasParent}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedElementName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBox DockPanel.Dock="Top"
               Watermark="Sort order"
               IsVisible="{Binding IsElementSelected}"
               Text="{Binding SortOrder}"/>
      <Button Command="{Binding InsertElement}"
              DockPanel.Dock="Top"
              IsVisible="{Binding IsElementSelected}"
              Content="Insert the type"
              Height="30"/>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding HasErrors}"
                 Text="Please fix these errors"/>
      <TextBox DockPanel.Dock="Top"
               IsVisible="{Binding HasErrors}"
               Text="{Binding Errors}"
               IsReadOnly="True"/>
    </DockPanel>
  </ScrollViewer>
</UserControl>