<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="TeamBond.Syntosa.Validation.DataEditor.Views.TypePrototypeEditorView">
  <ScrollViewer ScrollViewer.VerticalScrollBarVisibility="Visible">
    <DockPanel>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding !HasSelected}">
        Select the type to edit.
      </TextBlock>
      <ListBox Items="{Binding AllTypeItemNames}"
               IsVisible="{Binding !HasSelected}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedTypeItemName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 Text="{Binding CurrentName}"
                 IsVisible="{Binding HasSelected}"/>
      <TextBox DockPanel.Dock="Top"
               IsVisible="{Binding HasSelected}"
               Watermark="Type name"
               Text="{Binding NewTypeItemName}"/>
      <TextBlock DockPanel.Dock="Top"
                 Text="{Binding CurrentDescription}"
                 IsVisible="{Binding HasSelected}"/>
      <TextBox DockPanel.Dock="Top"
               Watermark="Type description"
               IsVisible="{Binding HasSelected}"
               Text="{Binding NewTypeItemDescription}"/>
      <CheckBox DockPanel.Dock="Top"
                IsThreeState="False"
                IsVisible="{Binding HasSelected}"
                IsChecked="{Binding HasParent}">
        Does the type have a parent
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsThreeState="False"
                IsVisible="{Binding HasSelected}"
                IsChecked="{Binding IsActive}">
        Is the type active
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsThreeState="False"
                IsVisible="{Binding HasSelected}"
                IsChecked="{Binding IsBuiltIn}">
        Is the type built in
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsThreeState="False"
                IsVisible="{Binding HasSelected}"
                IsChecked="{Binding IsAssignable}">
        Is the type assignable
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsThreeState="False"
                IsVisible="{Binding HasSelected}"
                IsChecked="{Binding IsNotifiable}">
        Is the type notifiable
      </CheckBox>
      <CheckBox DockPanel.Dock="Top"
                IsThreeState="False"
                IsVisible="{Binding HasSelected}"
                IsChecked="{Binding IsAutoCollect}">
        Is the type auto collecting from somewhere
      </CheckBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding HasSelected}">
        Select the data store type.
      </TextBlock>
      <ListBox Items="{Binding DatabaseTypes}"
               IsVisible="{Binding HasSelected}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedDataStoreType}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding HasSelected}">
        Select the type function.
      </TextBlock>
      <ListBox Items="{Binding AllTypeFunctionNames}"
               SelectionMode="Single"
               IsVisible="{Binding HasSelected}"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedTypeFunctionName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding HasSelected}">
        Select the type unit.
      </TextBlock>
      <ListBox Items="{Binding AllTypeUnitNames}"
               IsVisible="{Binding HasSelected}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedTypeUnitName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding IsAutoCollect}">
        Select the auto collecting module.
      </TextBlock>
      <ListBox Items="{Binding AllModuleNames}"
               IsVisible="{Binding IsAutoCollect}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedModuleAutoCollectName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding HasParent}">
        Select the parent type.
      </TextBlock>
      <ListBox Items="{Binding AllTypeItemNames}"
               IsVisible="{Binding HasParent}"
               SelectionMode="Single"
               DockPanel.Dock="Top"
               ScrollViewer.VerticalScrollBarVisibility="Visible"
               Height="100"
               SelectedItem="{Binding SelectedTypeItemParentName}">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Border Background="White" CornerRadius="4" Padding="2">
              <TextBlock Text="{Binding}"/>
            </Border>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      <TextBox DockPanel.Dock="Top"
               Watermark="Sort order"
               IsVisible="{Binding HasSelected}"
               Text="{Binding SortOrder}"/>
      <Button Command="{Binding Next}"
              DockPanel.Dock="Top"
              Content="Next"
              IsVisible="{Binding !HasSelected}"
              Height="30"/>
      <Button Command="{Binding Update}"
              DockPanel.Dock="Top"
              Content="Update Type"
              IsVisible="{Binding HasSelected}"
              Height="30"/>
      <Button Command="{Binding Back}"
              DockPanel.Dock="Top"
              Height="30"
              Content="Back"
              IsVisible="{Binding HasSelected}"/>
      <Button Command="{Binding DeleteTypeItem}"
              Height="30"
              DockPanel.Dock="Top"
              Content="Delete Type"
              IsVisible="{Binding IsDeleteVisible}"/>
      <TextBlock DockPanel.Dock="Top"
                 IsVisible="{Binding HasErrors}"
                 Text="Please fix these errors"/>
      <TextBox DockPanel.Dock="Top"
               IsVisible="{Binding HasErrors}"
               Text="{Binding Errors}"
               IsReadOnly="True"/>
    </DockPanel>
  </ScrollViewer>
</UserControl>
